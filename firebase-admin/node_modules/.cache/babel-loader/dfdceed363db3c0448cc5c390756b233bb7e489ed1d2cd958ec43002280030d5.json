{"ast":null,"code":"import _objectSpread from\"/Users/bhuvanaa/Documents/my-react-app/firebase-admin/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{collection,addDoc,updateDoc,deleteDoc,doc,getDocs,getDoc,query,orderBy,where,onSnapshot}from'firebase/firestore';import{ref,uploadBytes,getDownloadURL,deleteObject}from'firebase/storage';import{db,storage}from'../firebase';import{jsx as _jsx}from\"react/jsx-runtime\";const PropertyContext=/*#__PURE__*/createContext();export const useProperties=()=>{return useContext(PropertyContext);};export const PropertyProvider=_ref=>{let{children}=_ref;const[properties,setProperties]=useState([]);const[loading,setLoading]=useState(true);const[stats,setStats]=useState({total:0,active:0,featured:0,sold:0});// Get all properties\nconst getProperties=async()=>{try{const propertiesRef=collection(db,'properties');const q=query(propertiesRef,orderBy('createdAt','desc'));const querySnapshot=await getDocs(q);const propertiesData=querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));setProperties(propertiesData);updateStats(propertiesData);setLoading(false);}catch(error){console.error('Error getting properties:',error);setLoading(false);}};// Get single property\nconst getProperty=async id=>{try{const propertyDoc=await getDoc(doc(db,'properties',id));if(propertyDoc.exists()){return _objectSpread({id:propertyDoc.id},propertyDoc.data());}return null;}catch(error){console.error('Error getting property:',error);return null;}};// Add new property\nconst addProperty=async(propertyData,images)=>{try{// Upload images to Firebase Storage\nconst imageUrls=await uploadImages(images);const propertyWithImages=_objectSpread(_objectSpread({},propertyData),{},{images:imageUrls,createdAt:new Date(),updatedAt:new Date()});const docRef=await addDoc(collection(db,'properties'),propertyWithImages);return docRef.id;}catch(error){console.error('Error adding property:',error);throw error;}};// Update property\nconst updateProperty=async function(id,propertyData){let newImages=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];try{const propertyRef=doc(db,'properties',id);let updateData=_objectSpread(_objectSpread({},propertyData),{},{updatedAt:new Date()});// If new images are provided, upload them\nif(newImages.length>0){const imageUrls=await uploadImages(newImages);updateData.images=[...(propertyData.images||[]),...imageUrls];}await updateDoc(propertyRef,updateData);}catch(error){console.error('Error updating property:',error);throw error;}};// Delete property\nconst deleteProperty=async id=>{try{// Get property to delete associated images\nconst property=await getProperty(id);if(property&&property.images){// Delete images from storage\nfor(const image of property.images){try{const imageRef=ref(storage,image.url);await deleteObject(imageRef);}catch(error){console.error('Error deleting image:',error);}}}await deleteDoc(doc(db,'properties',id));}catch(error){console.error('Error deleting property:',error);throw error;}};// Upload images to Firebase Storage\nconst uploadImages=async images=>{const uploadPromises=images.map(async image=>{const imageRef=ref(storage,\"properties/\".concat(Date.now(),\"_\").concat(image.name));const snapshot=await uploadBytes(imageRef,image);const downloadURL=await getDownloadURL(snapshot.ref);return{url:downloadURL,alt:image.name,isPrimary:false};});return Promise.all(uploadPromises);};// Update statistics\nconst updateStats=propertiesData=>{const stats={total:propertiesData.length,active:propertiesData.filter(p=>p.isActive).length,featured:propertiesData.filter(p=>p.isFeatured).length,sold:propertiesData.filter(p=>p.status==='sold').length};setStats(stats);};// Real-time listener for properties\nuseEffect(()=>{const propertiesRef=collection(db,'properties');const q=query(propertiesRef,orderBy('createdAt','desc'));const unsubscribe=onSnapshot(q,querySnapshot=>{const propertiesData=querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));setProperties(propertiesData);updateStats(propertiesData);setLoading(false);});return()=>unsubscribe();},[]);const value={properties,loading,stats,getProperties,getProperty,addProperty,updateProperty,deleteProperty,uploadImages};return/*#__PURE__*/_jsx(PropertyContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","collection","addDoc","updateDoc","deleteDoc","doc","getDocs","getDoc","query","orderBy","where","onSnapshot","ref","uploadBytes","getDownloadURL","deleteObject","db","storage","jsx","_jsx","PropertyContext","useProperties","PropertyProvider","_ref","children","properties","setProperties","loading","setLoading","stats","setStats","total","active","featured","sold","getProperties","propertiesRef","q","querySnapshot","propertiesData","docs","map","_objectSpread","id","data","updateStats","error","console","getProperty","propertyDoc","exists","addProperty","propertyData","images","imageUrls","uploadImages","propertyWithImages","createdAt","Date","updatedAt","docRef","updateProperty","newImages","arguments","length","undefined","propertyRef","updateData","deleteProperty","property","image","imageRef","url","uploadPromises","concat","now","name","snapshot","downloadURL","alt","isPrimary","Promise","all","filter","p","isActive","isFeatured","status","unsubscribe","value","Provider"],"sources":["/Users/bhuvanaa/Documents/my-react-app/firebase-admin/src/contexts/PropertyContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { \n  collection, \n  addDoc, \n  updateDoc, \n  deleteDoc, \n  doc, \n  getDocs, \n  getDoc,\n  query, \n  orderBy, \n  where,\n  onSnapshot\n} from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { db, storage } from '../firebase';\n\nconst PropertyContext = createContext();\n\nexport const useProperties = () => {\n  return useContext(PropertyContext);\n};\n\nexport const PropertyProvider = ({ children }) => {\n  const [properties, setProperties] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [stats, setStats] = useState({\n    total: 0,\n    active: 0,\n    featured: 0,\n    sold: 0\n  });\n\n  // Get all properties\n  const getProperties = async () => {\n    try {\n      const propertiesRef = collection(db, 'properties');\n      const q = query(propertiesRef, orderBy('createdAt', 'desc'));\n      const querySnapshot = await getDocs(q);\n      \n      const propertiesData = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      \n      setProperties(propertiesData);\n      updateStats(propertiesData);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error getting properties:', error);\n      setLoading(false);\n    }\n  };\n\n  // Get single property\n  const getProperty = async (id) => {\n    try {\n      const propertyDoc = await getDoc(doc(db, 'properties', id));\n      if (propertyDoc.exists()) {\n        return { id: propertyDoc.id, ...propertyDoc.data() };\n      }\n      return null;\n    } catch (error) {\n      console.error('Error getting property:', error);\n      return null;\n    }\n  };\n\n  // Add new property\n  const addProperty = async (propertyData, images) => {\n    try {\n      // Upload images to Firebase Storage\n      const imageUrls = await uploadImages(images);\n      \n      const propertyWithImages = {\n        ...propertyData,\n        images: imageUrls,\n        createdAt: new Date(),\n        updatedAt: new Date()\n      };\n\n      const docRef = await addDoc(collection(db, 'properties'), propertyWithImages);\n      return docRef.id;\n    } catch (error) {\n      console.error('Error adding property:', error);\n      throw error;\n    }\n  };\n\n  // Update property\n  const updateProperty = async (id, propertyData, newImages = []) => {\n    try {\n      const propertyRef = doc(db, 'properties', id);\n      \n      let updateData = {\n        ...propertyData,\n        updatedAt: new Date()\n      };\n\n      // If new images are provided, upload them\n      if (newImages.length > 0) {\n        const imageUrls = await uploadImages(newImages);\n        updateData.images = [...(propertyData.images || []), ...imageUrls];\n      }\n\n      await updateDoc(propertyRef, updateData);\n    } catch (error) {\n      console.error('Error updating property:', error);\n      throw error;\n    }\n  };\n\n  // Delete property\n  const deleteProperty = async (id) => {\n    try {\n      // Get property to delete associated images\n      const property = await getProperty(id);\n      if (property && property.images) {\n        // Delete images from storage\n        for (const image of property.images) {\n          try {\n            const imageRef = ref(storage, image.url);\n            await deleteObject(imageRef);\n          } catch (error) {\n            console.error('Error deleting image:', error);\n          }\n        }\n      }\n\n      await deleteDoc(doc(db, 'properties', id));\n    } catch (error) {\n      console.error('Error deleting property:', error);\n      throw error;\n    }\n  };\n\n  // Upload images to Firebase Storage\n  const uploadImages = async (images) => {\n    const uploadPromises = images.map(async (image) => {\n      const imageRef = ref(storage, `properties/${Date.now()}_${image.name}`);\n      const snapshot = await uploadBytes(imageRef, image);\n      const downloadURL = await getDownloadURL(snapshot.ref);\n      return {\n        url: downloadURL,\n        alt: image.name,\n        isPrimary: false\n      };\n    });\n\n    return Promise.all(uploadPromises);\n  };\n\n  // Update statistics\n  const updateStats = (propertiesData) => {\n    const stats = {\n      total: propertiesData.length,\n      active: propertiesData.filter(p => p.isActive).length,\n      featured: propertiesData.filter(p => p.isFeatured).length,\n      sold: propertiesData.filter(p => p.status === 'sold').length\n    };\n    setStats(stats);\n  };\n\n  // Real-time listener for properties\n  useEffect(() => {\n    const propertiesRef = collection(db, 'properties');\n    const q = query(propertiesRef, orderBy('createdAt', 'desc'));\n    \n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const propertiesData = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setProperties(propertiesData);\n      updateStats(propertiesData);\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const value = {\n    properties,\n    loading,\n    stats,\n    getProperties,\n    getProperty,\n    addProperty,\n    updateProperty,\n    deleteProperty,\n    uploadImages\n  };\n\n  return (\n    <PropertyContext.Provider value={value}>\n      {children}\n    </PropertyContext.Provider>\n  );\n};\n"],"mappings":"0IAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,OACEC,UAAU,CACVC,MAAM,CACNC,SAAS,CACTC,SAAS,CACTC,GAAG,CACHC,OAAO,CACPC,MAAM,CACNC,KAAK,CACLC,OAAO,CACPC,KAAK,CACLC,UAAU,KACL,oBAAoB,CAC3B,OAASC,GAAG,CAAEC,WAAW,CAAEC,cAAc,CAAEC,YAAY,KAAQ,kBAAkB,CACjF,OAASC,EAAE,CAAEC,OAAO,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1C,KAAM,CAAAC,eAAe,cAAGvB,aAAa,CAAC,CAAC,CAEvC,MAAO,MAAM,CAAAwB,aAAa,CAAGA,CAAA,GAAM,CACjC,MAAO,CAAAvB,UAAU,CAACsB,eAAe,CAAC,CACpC,CAAC,CAED,MAAO,MAAM,CAAAE,gBAAgB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3C,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAC4B,OAAO,CAAEC,UAAU,CAAC,CAAG7B,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC8B,KAAK,CAAEC,QAAQ,CAAC,CAAG/B,QAAQ,CAAC,CACjCgC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,CAAC,CACTC,QAAQ,CAAE,CAAC,CACXC,IAAI,CAAE,CACR,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAC,aAAa,CAAGnC,UAAU,CAACe,EAAE,CAAE,YAAY,CAAC,CAClD,KAAM,CAAAqB,CAAC,CAAG7B,KAAK,CAAC4B,aAAa,CAAE3B,OAAO,CAAC,WAAW,CAAE,MAAM,CAAC,CAAC,CAC5D,KAAM,CAAA6B,aAAa,CAAG,KAAM,CAAAhC,OAAO,CAAC+B,CAAC,CAAC,CAEtC,KAAM,CAAAE,cAAc,CAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAACpC,GAAG,EAAAqC,aAAA,EAC/CC,EAAE,CAAEtC,GAAG,CAACsC,EAAE,EACPtC,GAAG,CAACuC,IAAI,CAAC,CAAC,CACb,CAAC,CAEHlB,aAAa,CAACa,cAAc,CAAC,CAC7BM,WAAW,CAACN,cAAc,CAAC,CAC3BX,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,MAAOkB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjDlB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED;AACA,KAAM,CAAAoB,WAAW,CAAG,KAAO,CAAAL,EAAE,EAAK,CAChC,GAAI,CACF,KAAM,CAAAM,WAAW,CAAG,KAAM,CAAA1C,MAAM,CAACF,GAAG,CAACW,EAAE,CAAE,YAAY,CAAE2B,EAAE,CAAC,CAAC,CAC3D,GAAIM,WAAW,CAACC,MAAM,CAAC,CAAC,CAAE,CACxB,OAAAR,aAAA,EAASC,EAAE,CAAEM,WAAW,CAACN,EAAE,EAAKM,WAAW,CAACL,IAAI,CAAC,CAAC,EACpD,CACA,MAAO,KAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,MAAO,KAAI,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAK,WAAW,CAAG,KAAAA,CAAOC,YAAY,CAAEC,MAAM,GAAK,CAClD,GAAI,CACF;AACA,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAC,YAAY,CAACF,MAAM,CAAC,CAE5C,KAAM,CAAAG,kBAAkB,CAAAd,aAAA,CAAAA,aAAA,IACnBU,YAAY,MACfC,MAAM,CAAEC,SAAS,CACjBG,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CACrBC,SAAS,CAAE,GAAI,CAAAD,IAAI,CAAC,CAAC,EACtB,CAED,KAAM,CAAAE,MAAM,CAAG,KAAM,CAAA1D,MAAM,CAACD,UAAU,CAACe,EAAE,CAAE,YAAY,CAAC,CAAEwC,kBAAkB,CAAC,CAC7E,MAAO,CAAAI,MAAM,CAACjB,EAAE,CAClB,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAe,cAAc,CAAG,cAAAA,CAAOlB,EAAE,CAAES,YAAY,CAAqB,IAAnB,CAAAU,SAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC5D,GAAI,CACF,KAAM,CAAAG,WAAW,CAAG7D,GAAG,CAACW,EAAE,CAAE,YAAY,CAAE2B,EAAE,CAAC,CAE7C,GAAI,CAAAwB,UAAU,CAAAzB,aAAA,CAAAA,aAAA,IACTU,YAAY,MACfO,SAAS,CAAE,GAAI,CAAAD,IAAI,CAAC,CAAC,EACtB,CAED;AACA,GAAII,SAAS,CAACE,MAAM,CAAG,CAAC,CAAE,CACxB,KAAM,CAAAV,SAAS,CAAG,KAAM,CAAAC,YAAY,CAACO,SAAS,CAAC,CAC/CK,UAAU,CAACd,MAAM,CAAG,CAAC,IAAID,YAAY,CAACC,MAAM,EAAI,EAAE,CAAC,CAAE,GAAGC,SAAS,CAAC,CACpE,CAEA,KAAM,CAAAnD,SAAS,CAAC+D,WAAW,CAAEC,UAAU,CAAC,CAC1C,CAAE,MAAOrB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAsB,cAAc,CAAG,KAAO,CAAAzB,EAAE,EAAK,CACnC,GAAI,CACF;AACA,KAAM,CAAA0B,QAAQ,CAAG,KAAM,CAAArB,WAAW,CAACL,EAAE,CAAC,CACtC,GAAI0B,QAAQ,EAAIA,QAAQ,CAAChB,MAAM,CAAE,CAC/B;AACA,IAAK,KAAM,CAAAiB,KAAK,GAAI,CAAAD,QAAQ,CAAChB,MAAM,CAAE,CACnC,GAAI,CACF,KAAM,CAAAkB,QAAQ,CAAG3D,GAAG,CAACK,OAAO,CAAEqD,KAAK,CAACE,GAAG,CAAC,CACxC,KAAM,CAAAzD,YAAY,CAACwD,QAAQ,CAAC,CAC9B,CAAE,MAAOzB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACF,CACF,CAEA,KAAM,CAAA1C,SAAS,CAACC,GAAG,CAACW,EAAE,CAAE,YAAY,CAAE2B,EAAE,CAAC,CAAC,CAC5C,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAS,YAAY,CAAG,KAAO,CAAAF,MAAM,EAAK,CACrC,KAAM,CAAAoB,cAAc,CAAGpB,MAAM,CAACZ,GAAG,CAAC,KAAO,CAAA6B,KAAK,EAAK,CACjD,KAAM,CAAAC,QAAQ,CAAG3D,GAAG,CAACK,OAAO,eAAAyD,MAAA,CAAgBhB,IAAI,CAACiB,GAAG,CAAC,CAAC,MAAAD,MAAA,CAAIJ,KAAK,CAACM,IAAI,CAAE,CAAC,CACvE,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAhE,WAAW,CAAC0D,QAAQ,CAAED,KAAK,CAAC,CACnD,KAAM,CAAAQ,WAAW,CAAG,KAAM,CAAAhE,cAAc,CAAC+D,QAAQ,CAACjE,GAAG,CAAC,CACtD,MAAO,CACL4D,GAAG,CAAEM,WAAW,CAChBC,GAAG,CAAET,KAAK,CAACM,IAAI,CACfI,SAAS,CAAE,KACb,CAAC,CACH,CAAC,CAAC,CAEF,MAAO,CAAAC,OAAO,CAACC,GAAG,CAACT,cAAc,CAAC,CACpC,CAAC,CAED;AACA,KAAM,CAAA5B,WAAW,CAAIN,cAAc,EAAK,CACtC,KAAM,CAAAV,KAAK,CAAG,CACZE,KAAK,CAAEQ,cAAc,CAACyB,MAAM,CAC5BhC,MAAM,CAAEO,cAAc,CAAC4C,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,QAAQ,CAAC,CAACrB,MAAM,CACrD/B,QAAQ,CAAEM,cAAc,CAAC4C,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACE,UAAU,CAAC,CAACtB,MAAM,CACzD9B,IAAI,CAAEK,cAAc,CAAC4C,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACG,MAAM,GAAK,MAAM,CAAC,CAACvB,MACxD,CAAC,CACDlC,QAAQ,CAACD,KAAK,CAAC,CACjB,CAAC,CAED;AACA7B,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoC,aAAa,CAAGnC,UAAU,CAACe,EAAE,CAAE,YAAY,CAAC,CAClD,KAAM,CAAAqB,CAAC,CAAG7B,KAAK,CAAC4B,aAAa,CAAE3B,OAAO,CAAC,WAAW,CAAE,MAAM,CAAC,CAAC,CAE5D,KAAM,CAAA+E,WAAW,CAAG7E,UAAU,CAAC0B,CAAC,CAAGC,aAAa,EAAK,CACnD,KAAM,CAAAC,cAAc,CAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAACpC,GAAG,EAAAqC,aAAA,EAC/CC,EAAE,CAAEtC,GAAG,CAACsC,EAAE,EACPtC,GAAG,CAACuC,IAAI,CAAC,CAAC,CACb,CAAC,CACHlB,aAAa,CAACa,cAAc,CAAC,CAC7BM,WAAW,CAACN,cAAc,CAAC,CAC3BX,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CAEF,MAAO,IAAM4D,WAAW,CAAC,CAAC,CAC5B,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,KAAK,CAAG,CACZhE,UAAU,CACVE,OAAO,CACPE,KAAK,CACLM,aAAa,CACba,WAAW,CACXG,WAAW,CACXU,cAAc,CACdO,cAAc,CACdb,YACF,CAAC,CAED,mBACEpC,IAAA,CAACC,eAAe,CAACsE,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAjE,QAAA,CACpCA,QAAQ,CACe,CAAC,CAE/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}